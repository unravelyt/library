<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.library.mapper.AdminMapper">

    <select id="findAll" resultType="Admin">
        select * from admin
    </select>

<!--
方法一：不需要写parameterType参数
    public List<XXXBean> getXXXBeanList(String xxId, String xxCode);
<select id="getXXXBeanList" resultType="XXBean">
　　select t.* from tableName where id = #{0} and name = #{1}
</select>
由于是多参数那么就不能使用parameterType， 改用#｛index｝是第几个就用第几个的索引，索引从0开始

方法二：基于注解(最简单)
    public List<XXXBean> getXXXBeanList(@Param("id")String id, @Param("code")String code);
<select id="getXXXBeanList" resultType="XXBean">
　　select t.* from tableName where id = #{id} and name = #{code}
</select>
由于是多参数那么就不能使用parameterType， 这里用@Param来指定哪一个

方法三：Map封装
    public List<XXXBean> getXXXBeanList(HashMap map);
<select id="getXXXBeanList" parameterType="hashmap" resultType="XXBean">
　　select 字段... from XXX where id=#{xxId} code = #{xxCode}
</select>
其中hashmap是mybatis自己配置好的直接使用就行。map中key的名字是那个就在#{}使用那个，map如何封装就不用了我说了吧。

方法四：List封装
public List<XXXBean> getXXXBeanList(List<String> list);

<select id="getXXXBeanList" resultType="XXBean">
　　select 字段... from XXX where id in
　　<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
　　　　#{item}
　　</foreach>
</select>
总结
传递list和map在资源消耗上肯定远大于方法一和方法二，但是有一些特殊的情形需要传递list，
比如你需要传递一个id集合并批量对id进行sql操作然后再返回等等。所以都需要了解。
-->
    <select id="findByAdmin" resultType="Admin">
        select * from admin where username=#{username} and password=#{password}
    </select>

    <update id="updateAdmin" parameterType="Admin">
        update admin set username=#{username},password=#{password},name=#{name},gender=#{gender},phone=#{phone} where id =#{id}
    </update>

    <insert id="addAdmin" parameterType="Admin">
        insert into admin(username,password,name,gender,phone) values (#{username},#{password},#{name},#{gender},#{phone})
    </insert>
    
    <delete id="deleteAdmin" parameterType="Integer">
        delete from admin where id = #{id}
    </delete>


</mapper>